generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Role {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String   @unique
  userIds String[]
}

model Todo {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime @db.Date
  isCompleted Boolean
  isPinned    Boolean
  priority    BigInt
  title       String
  updatedAt   DateTime @db.Date
  userId      String   @db.ObjectId
}

model User {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String   @unique
  name    String
  roleIds String[]
}

// generator client {
//   provider = "prisma-client-js"
// }
//
// datasource db {
//   provider = "mongodb"
//   url      = env("DATABASE_URL")
// }
//
// model Role {
//   id      String   @id @default(auto()) @map("_id") @db.ObjectId
//   name    String   @unique
//   users   User[]   @relation("User Roles", fields: [userIds], references: [id])
//   userIds String[] @db.ObjectId
// }
//
// model User {
//   id      String   @id @default(auto()) @map("_id") @db.ObjectId
//   name    String
//   email   String   @unique
//   todos   Todo[]   @relation("User Todos")
//   roles   Role[]   @relation("User Roles", fields: [roleIds], references: [id])
//   roleIds String[] @db.ObjectId
// }
//
// model Todo {
//   id          String   @id @default(auto()) @map("_id") @db.ObjectId
//   title       String
//   isCompleted Boolean  @default(false)
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   isPinned    Boolean  @default(false)
//   priority    Int      @default(1)
//   userId      String?  @db.ObjectId
//   user        User?    @relation("User Todos", fields: [userId], references: [id])
// }

// datasource db {
//   provider     = "postgresql"
//   url          = env("DATABASE_URL")
//   relationMode = "prisma"
// }

// model Role {
//   id    String @id @default(cuid())
//   name  String @unique
//   users User[] @relation("User Roles")
// }
//
// model User {
//   id    String @id @default(cuid())
//   name  String
//   email String @unique
//   todos Todo[] @relation("User Todos")
//   roles Role[] @relation("User Roles")
// }
//
// model Todo {
//   id          String   @id @default(cuid())
//   title       String
//   isCompleted Boolean  @default(false)
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   isPinned    Boolean  @default(false)
//   priority    Int      @default(1)
//   userId      String?
//   user        User?    @relation("User Todos", fields: [userId], references: [id])
//
//   @@index([userId])
// }
